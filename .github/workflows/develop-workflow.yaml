############## Created by de.microtema:github-workflow-maven-plugin ############
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# Files under .github/workflows folder are generated and should not be edited. #
################################################################################

name: '[DEV] Azure Serverless Architecture with Terraform'
on:
  push:
    branches:
      - develop
env:
  APP_NAME: "azure-serverless"
  APP_DISPLAY_NAME: "Azure Serverless Architecture with Terraform"
  VERSION: "1.0.0-SNAPSHOT"
  STAGE_NAME: "dev"
  NODE_VERSION: "16"
  AZURE_RESOURCE_GROUP: "rg-microtema-dev-westeurope-03"
  AZURE_LOCATION: "westeurope"
jobs:
  initialize:
    name: Initialize
    runs-on: [ ubuntu-latest ]
    needs: [ ]
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Check Resource Group
        id: rg-check
        run: echo "exists=$(az group exists -n $AZURE_RESOURCE_GROUP)" >> $GITHUB_OUTPUT
      - name: Create Resource Group
        if: steps.rg-check.outputs.exists == 'false'
        run: az group create --location $AZURE_LOCATION --name $AZURE_RESOURCE_GROUP
      - name: Create Resource Group
        if: steps.rg-check.outputs.exists == 'false'
        run: az group wait --created  --resource-group $AZURE_RESOURCE_GROUP
  deployment:
    name: Deployment
    runs-on: [ ubuntu-latest ]
    needs: [ initialize ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Init
        working-directory: ./terraform
        run: echo terraform init
      - name: Terraform Validate
        working-directory: ./terraform
        run: echo terraform validate
      - name: Terraform Plan
        working-directory: ./terraform
        run: echo terraform plan -out=tfplan -input=false -var-file="env/.dev.tfvars"
      - name: Terraform Apply
        working-directory: ./terraform
        run: echo terraform apply tfplan